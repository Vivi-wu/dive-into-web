---
title:  "CSS Texts"
category: CSS
---
跟文本有关的 CSS 属性有：

+ _color_，设置文本的颜色。通常以颜色的 name, HEX 值, RGB 值来指定。对于符合 W3C 的 CSS，如果你定义了 color 这个性质，也要定义 _background-color_ 属性。
+ _text-align_，设置文本的**水平对齐**方式。如果文本的书写方向为 left-to-right 从左到右，则默认是**左对齐**，反之，为右对齐。可取值为：left, right, center, **justify**（每行文本将拉伸，达到相同的宽度，就像报纸和杂志上的文字排版）
+ _text-decoration_，用来设置或移除文本的装饰。可取的值为：none（无装饰），overline <span style="text-decoration:overline;">文字上方划线</span>，line-through <span style="text-decoration:line-through;">横线穿过文字</span>，underline <span style="text-decoration:underline;">文字下方划线</span>（`<a>` 链接的默认文本样式）

    **注意**：<span class="t-blue">不建议设置那些**非链接**的文字带有下划线，这样经常会误导用户</span>.

<!--more-->

+ _text-transform_，设定文本中的大小写字母。可取的值为：

    + `uppercase`, 全部转为大写。<span style="text-transform:uppercase">This is some text</span>.
    + `lowercase`, 全部转为小写。<span style="text-transform:lowercase">This is some text</span>.
    + `capitalize`, **每个**单词的**首字母**转为**大写**。<span style="text-transform:capitalize">This is some text</span>.

+ _text-indent_，**首行缩进**，指定一段文字中段落开始处与左边线的距离。可取的值为：

    + length: 使用 px, pt, cm, em 指定间距，默认值是 **0**
    + %，以父元素宽度的百分比

+ _letter-spacing_，增加或减少文本中每个**字符**之间的距离。_word-spacing_，增加或减少文本中每个**单词**之间的距离。两者都可以取值：

    + `nomal`: **默认值**，字符之间没有额外的空隙。
    + length: 使用 px, pt, cm, em 指定间距，**允许负值**

+ _line-height_，指定**每行文本之间的距离**。

    + `normal`: **默认值**，值取决于 user-agent 和字体集，由浏览器分别计算得到。桌面浏览器一般为 1.2
    + number，实际行高由**当前元素**的 _font-size_ 乘以这个数字得到
    + length，使用 CSS 单位表示大小(如：px，em 等)
    + `%`，由**元素** _font-size_ 的百分比计算得到

    如果不明确设置子元素行高，当其父元素的 _line-height_ 值为 length 和 % 时，子元素会**直接继承父元素行高**。

    <span class="t-blue">为避免意外，尽量使用 **number** 设置行高</span>。

    看演示：

    <p data-height="265" data-theme-id="0" data-slug-hash="VmGpWo" data-default-tab="result" data-user="VivienneWU" data-embed-version="2" data-pen-title="Different value for line-height" class="codepen">See the Pen <a href="http://codepen.io/VivienneWU/pen/VmGpWo/">Different value for line-height</a> by Vivienne (<a href="http://codepen.io/VivienneWU">@VivienneWU</a>) on <a href="http://codepen.io">CodePen</a>.</p>
    <script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

+ _direction_，通常与 _unicode-bidi_ 一起用，设定同一个文件中的文本是否需要改变书写方向，以支持多种语言。前者取值：

    + `ltr`: **默认值**，left-to-right
    + `rtl`: right-to-left

    后者取值：

    + `normal`, 默认值，不需要使用额外的嵌入
    + `embed`, 加一层额外嵌入
    + `bidi-override`, 加一层额外嵌入，根据 direction 性质所指定的方向来重新书写文字。

+ _white-space_，指定如何处理元素里的**空白符**（<span class="t-red">对源文档中的空格、换行和 tab 字符的处理</span>）。

    <span class="t-blue">以下三个值都会使**多个相连**空白符折叠成为**一个**</span>:

    + `normal`，默认值，文本在必要时会换行。
    + `nowrap`，文本**不**允许自动换行，除非遇到 `<br>` 一个换行符
    + `pre-line`，文本在必要时会换行，遇到 line breaks 也会换行

    <span class="t-blue">以下取值浏览器将**不处理**空白符（**不合并**空格，**不忽略**换行）</span>

    + `pre`，文本只在 line breaks 处换行，**不**会自动换行
    + `pre-wrap`，文本在必要时会换行，遇到 line breaks 也会换行

+ _vertical-align_，设定元素垂直对齐的方式。只影响 inline, inline-block, inline-table, 和 table cell 等元素。可取值：

    + `baseline`  默认值， 使得元素的 baseline（基线）与父元素的基线对齐
    + length      以指定的值来**升高**或**降低**元素，**允许负值**（设为负值降低元素）
    + %           <span class="t-red">以 _line-height_ 性质值的百分之几来升高或降低元素</span>，**允许负值**
    + `sub`         元素像<span style="vertical-aglin:sub;">下标</span>一样对齐
    + `super`       元素像<span style="vertical-aglin:super;">上标</span>一样对齐
    + `top`         元素的 top 与所在行最高的元素的 top 对齐
    + `text-top`    元素的 top 与父元素的字体的 top 对齐
    + `bottom`      元素的 bottom 与所在行最低的元素对齐
    + `text-bottom` 元素的 bottom 与父元素的字体的 bottom 对齐
    + `middle`      元素放置在父元素的中间

## CSS3 Text 新属性

新增文本阴影、文本溢出和单词断字功能。

+ _text-shadow_，该属性可以给文本添加**一个**或**多个**阴影，使用逗号来分隔开每一种阴影效果。

    `text-shadow: h-shadow v-shadow blur-radius color|none|initial|inherit;`

    + `none`: 默认没有阴影
    + h-shadow: **required**, 水平阴影的位置，允许负值
    + v-shadow: **required**, 竖直阴影的位置，允许负值
    + blur-radius: 可选的, 模糊的半径。默认值为 **0**
    + spread: 可选的, 阴影的尺寸大小，允许负值
    + color: 可选的

+ _text-overflow_，用来设定那些**溢出**而**不被显示**的内容应该如何提示给用户（需父元素设定了固定的 width，且 _overflow_ 属性值为 `hidden`）。可取值：

   + `clip`，**默认值**，直接剪切掉文本，好像被橡皮擦掉超出部分一样。
   + `ellipsis`，将在临界处文本末尾添加 `...` 来代表有文本被隐藏。只能通过限宽实现，如要求限制值的长度，则需js实现。
   + string，显示给定的字符串，来代表被隐藏的文本。(很遗憾，目前只有 Firefox 支持)

+ _word-wrap_，允许长的单词能够被分隔开，绕到下一行。取值为：

   + `normal`，**默认值**，针对英语类单词，只在允许的分隔处分开单词。
   + `break-word`，允许单词被分割，即使在单词的中间。

+ _word-break_，<span class="t-red">对于非 CJK 脚本（比如中文、日语、韩语）指定换行规则</span>。可取值：

   + `normal`，**默认值**，根据常用规则分隔单词。
   + `break-all`，允许在任何两个字之间换行
   + `keep-all`，禁止词组之间断行

+ _text-align-last_，指定文本最后一行要如何对齐。**Safari 目前不支持该属性**。可取值有：

   + `auto`, **默认值**, justified and aligned left
   + `left`，`right`，`center` 左／右／中间对齐
   + `justify`，拉伸最后一行文本，以满足和其他行相同的宽度
   + `start`，`end`，在文本行开始／结尾处对齐（根据 _direction_ 属性的值确定是左对齐，还是右对齐）

### 示例

列表页商品标题仅显示一行，超出模块宽度隐藏，并显示 `...`

```css
.truncate-title {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
```

## CSS3 Multiple Columns

新增为文本布局创建 multiple columns，就像报纸上的多列显示.

+ _column-width_ 列宽，指定一个建议的最优的列宽度。可取值：`auto` 和 length 。
+ _column-count_ 列数，指定元素分成几列。可取值：`auto` 和 integer 。

以上两个属性 all in one 的简写属性是 _columns_ 。

两列之间可以绘制分割线。

+ _column-rule-style_ 分割线的样式，取值参考 _border-style_
+ _column-rule-width_ 分割线的宽度，**不允许负值**
+ _column-rule-color_ 分隔线的颜色，可取值：color 。

以上两个属性 all in one 的简写属性是 _column-rule_。

此外还有：

+ _column-gap_ 定义列间距，可取值：`normal` 和 length 。
+ _column-fill_ 指定是否把文字尽可能平均分配到每一列。可取值：`balance` 、 `balance-all` 和 `auto` 。

目前除 Edge 大部分浏览器不支持 break-before, break-after, break-inside 还不支持。火狐不支持 column-span，
